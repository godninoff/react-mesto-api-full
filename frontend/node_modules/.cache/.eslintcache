[{"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\index.js":"1","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js":"2","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js":"3","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js":"4","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\ConfirmPopup.js":"5","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js":"6","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\utils\\auth.js":"7","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\utils\\api.js":"8","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Card.js":"9","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\App.tsx":"10","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Login.tsx":"11","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\hooks.tsx":"12","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\authSlice.tsx":"13","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\api\\authApi.tsx":"14","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Header.tsx":"15","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\store.tsx":"16","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Register.tsx":"17","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Footer.tsx":"18","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\popupReducer.tsx":"19","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Main.tsx":"20","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.tsx":"21","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.tsx":"22","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.tsx":"23","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\api\\actionsApi.tsx":"24","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\userInfoSlice.tsx":"25","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.tsx":"26","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Config.tsx":"27"},{"size":632,"mtime":1680525289422,"results":"28","hashOfConfig":"29"},{"size":1583,"mtime":1680263018286,"results":"30","hashOfConfig":"29"},{"size":630,"mtime":1680263018292,"results":"31","hashOfConfig":"29"},{"size":334,"mtime":1680263018294,"results":"32","hashOfConfig":"29"},{"size":340,"mtime":1680263018290,"results":"33","hashOfConfig":"29"},{"size":84,"mtime":1680263018295,"results":"34","hashOfConfig":"29"},{"size":1005,"mtime":1680263836946,"results":"35","hashOfConfig":"29"},{"size":2420,"mtime":1680263018312,"results":"36","hashOfConfig":"29"},{"size":1603,"mtime":1680263018286,"results":"37","hashOfConfig":"29"},{"size":8231,"mtime":1680758361458,"results":"38","hashOfConfig":"29"},{"size":2030,"mtime":1680762586004,"results":"39","hashOfConfig":"29"},{"size":278,"mtime":1680165134292,"results":"40","hashOfConfig":"29"},{"size":912,"mtime":1680778017684,"results":"41","hashOfConfig":"29"},{"size":1200,"mtime":1683793341165,"results":"42","hashOfConfig":"29"},{"size":1767,"mtime":1680602870601,"results":"43","hashOfConfig":"29"},{"size":1343,"mtime":1680778283580,"results":"44","hashOfConfig":"29"},{"size":2397,"mtime":1680782710054,"results":"45","hashOfConfig":"29"},{"size":223,"mtime":1680757369470,"results":"46","hashOfConfig":"29"},{"size":1034,"mtime":1683288118125,"results":"47","hashOfConfig":"29"},{"size":2528,"mtime":1683290409236,"results":"48","hashOfConfig":"29"},{"size":1372,"mtime":1680782586125,"results":"49","hashOfConfig":"29"},{"size":3017,"mtime":1683290348453,"results":"50","hashOfConfig":"29"},{"size":1485,"mtime":1683290313210,"results":"51","hashOfConfig":"29"},{"size":805,"mtime":1683289912061,"results":"52","hashOfConfig":"29"},{"size":700,"mtime":1680778878271,"results":"53","hashOfConfig":"29"},{"size":553,"mtime":1683288122301,"results":"54","hashOfConfig":"29"},{"size":867,"mtime":1683288118125,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"bkthwy",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\index.js",[],[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\ConfirmPopup.js",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js",[],[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\utils\\auth.js",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\utils\\api.js",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Card.js",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\App.tsx",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Login.tsx",["148","149","150"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { useSignInMutation } from \"../store/api/authApi\";\r\nimport { useAppDispatch } from \"../store/hooks\";\r\nimport { getUserData } from \"../store/authSlice\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\nimport { FetchBaseQueryError } from \"@reduxjs/toolkit/dist/query\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const [signIn, { data, isSuccess, error }] = useSignInMutation();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (email && password) {\r\n      await signIn({ email, password });\r\n    }\r\n    console.error(\"error\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isSuccess) {\r\n      dispatch(\r\n        getUserData({\r\n          token: data.accessToken,\r\n          userId: data.user.id,\r\n          id: data.user.id,\r\n        })\r\n      );\r\n\r\n      navigate(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <section className=\"sign-in\">\r\n      <h2 className=\"login__title\">Вход</h2>\r\n      <form className=\"sign__form\" name=\"sign-in\" onSubmit={handleLogin}>\r\n        <input\r\n          className=\"sign__input\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          required\r\n        />\r\n        <span className=\"form__input-error\"></span>\r\n        <input\r\n          className=\"sign__input\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          name=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n          required\r\n        />\r\n        <span className=\"form__input-error\"></span>\r\n        <button className=\"sign__enter-button\" type=\"submit\" name=\"submit\">\r\n          Войти\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\hooks.tsx",[],[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\authSlice.tsx",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\api\\authApi.tsx",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Header.tsx",["151"],[],"import { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { signOut } from \"../store/authSlice\";\r\nimport { authApi, useGetUserQuery } from \"../store/api/authApi\";\r\nimport React from \"react\";\r\n\r\nconst logo = require(\"../images/logo.png\") as string;\r\n\r\nconst Header = () => {\r\n  const location = useLocation();\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const token = useAppSelector((state) => state.auth.token);\r\n  const id = useAppSelector((state) => state.auth.id);\r\n\r\n  const { data, isSuccess } = useGetUserQuery(id);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(authApi.util.resetApiState());\r\n    dispatch(signOut());\r\n    navigate(\"/signin\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!token) {\r\n      navigate(\"/signin\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Место\" />\r\n\r\n      {location.pathname === \"/signup\" ? (\r\n        <Link className=\"header__link\" to=\"/signin\">\r\n          Войти\r\n        </Link>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {location.pathname === \"/signin\" ? (\r\n        <Link className=\"header__link\" to=\"/signup\">\r\n          Регистрация\r\n        </Link>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {location.pathname !== \"/signup\" && location.pathname !== \"/signin\" ? (\r\n        <div className=\"header__user-auth\">\r\n          <p className=\"header__user-email\">{isSuccess && data.email}</p>\r\n          <Link className=\"header__link\" to=\"/signin\" onClick={handleLogout}>\r\n            Выйти\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\store.tsx",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Register.tsx",["152","153"],[],"import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useSignUpMutation } from \"../store/api/authApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUserData } from \"../store/authSlice\";\r\nimport { closeAllPopups, checkAuthSuccess } from \"../store/popupReducer\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const [signUp, { data, isSuccess }] = useSignUpMutation();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (email && password) {\r\n      await signUp({ email, password });\r\n      dispatch(closeAllPopups());\r\n    }\r\n    console.error(\"error\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (isSuccess) {\r\n      dispatch(\r\n        getUserData({\r\n          token: data.accessToken,\r\n          userId: data.user.id,\r\n          id: data.user.id,\r\n        })\r\n      );\r\n    }\r\n    dispatch(checkAuthSuccess(isSuccess));\r\n  }, [isSuccess]);\r\n\r\n  return (\r\n    <section className=\"sign-up\">\r\n      <h2 className=\"login__title\">Регистрация</h2>\r\n      <form className=\"sign__form\" name=\"sign-up\" onSubmit={handleRegister}>\r\n        <input\r\n          className=\"sign__input\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          required\r\n        />\r\n        <span className=\"form__input-error\"></span>\r\n        <input\r\n          className=\"sign__input\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          name=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n          required\r\n        />\r\n        <span className=\"form__input-error\"></span>\r\n        <button className=\"sign__enter-button\" type=\"submit\" name=\"submit\">\r\n          Зарегистрироваться\r\n        </button>\r\n        <p className=\"sign__form-bottom-text\">\r\n          <Link to=\"/signin\" className=\"sign__form-bottom-link header__link\">\r\n            Уже зарегистрированы? Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n      <InfoTooltip />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Footer.tsx",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\popupReducer.tsx",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Main.tsx",["154","155","156","157","158","159","160","161","162","163","164"],[],"import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport { useGetUserQuery } from \"../store/api/authApi\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport {\r\n  closeAllPopups,\r\n  isAddPlacePopupOpen,\r\n  isEditAvatarPopupOpen,\r\n  isEditProfilePopupOpen,\r\n  setPopupType,\r\n} from \"../store/popupReducer\";\r\nimport { getUserData } from \"../store/authSlice\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport { useGetUserInfoQuery } from \"../store/api/actionsApi\";\r\nimport { getUserInfo } from \"../store/userInfoSlice\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport { IPopupWithForm } from \"../store/types\";\r\n\r\nconst Main = (props: IPopupWithForm) => {\r\n  const dispatch = useAppDispatch();\r\n  const id = useAppSelector((state) => state.auth.id);\r\n  const { data, isSuccess } = useGetUserInfoQuery(id);\r\n  const type = useAppSelector((state) => state.popup.type);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div\r\n          className=\"profile__avatar-button\"\r\n          onClick={() => dispatch(setPopupType(\"avatar\"))}\r\n        >\r\n          <img\r\n            className=\"profile__avatar\"\r\n            src={data?.avatar}\r\n            alt=\"Аватар пользователя\"\r\n          />\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__title\">{data?.name}</h1>\r\n            <button\r\n              type=\"button\"\r\n              className=\"profile__button-edit\"\r\n              onClick={() => dispatch(setPopupType(\"edit\"))}\r\n            />\r\n          </div>\r\n          <p className=\"profile__subtitle\">{data?.about}</p>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"profile__add-button\"\r\n          onClick={() => dispatch(setPopupType(\"add\"))}\r\n        ></button>\r\n      </section>\r\n\r\n      {/* <section className=\"elements\">\r\n        {props.cards.map((card) => (\r\n          <Card\r\n            card={card}\r\n            key={card._id}\r\n            onCardDelete={props.onCardDelete}\r\n            onCardLike={props.onCardLike}\r\n            onCardClick={props.onCardClick}\r\n          />\r\n        ))}\r\n      </section> */}\r\n      {type === \"avatar\" && <EditAvatarPopup />}\r\n      {type === \"edit\" && <EditProfilePopup />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.tsx",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.tsx",["165"],[],"import React, { FormEvent } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { closeAllPopups, setPopupType } from \"../store/popupReducer\";\r\nimport { IPopupWithForm } from \"../store/types\";\r\nimport { getConfig } from \"./Config\";\r\n\r\ntype IPopup = {\r\n  title: string;\r\n  inputs?: Array<{ value: string; type: string; id: string }>;\r\n  onSubmit?: (e: FormEvent<Element>) => Promise<void>;\r\n};\r\n\r\nconst PopupWithForm = (props: IPopupWithForm) => {\r\n  // const popup = useAppSelector((state) => state.popup.closeAllPopups);\r\n  const type = useAppSelector((state) => state.popup.type);\r\n  const [popup, setPopup] = React.useState<IPopup | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    const modal = getConfig().find((item) => item.type === type);\r\n    setPopup(modal || null);\r\n  }, [type]);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (popup) {\r\n    return (\r\n      <div className={\"popup popup_visible\"}>\r\n        <div className=\"popup__container\">\r\n          <button\r\n            className=\"popup__close-button\"\r\n            type=\"button\"\r\n            onClick={() => dispatch(setPopupType(null))}\r\n          >\r\n            &times;\r\n          </button>\r\n          <h2 className=\"popup__title\">{popup.title}</h2>\r\n          <form\r\n            className=\"popup__form\"\r\n            onSubmit={(e) => {\r\n              if (props.onSubmit) {\r\n                props.onSubmit(e);\r\n              }\r\n            }}\r\n          >\r\n            {popup.inputs?.map((input) => {\r\n              return (\r\n                <>\r\n                  <input\r\n                    required\r\n                    value={input.value}\r\n                    onChange={(e) => {\r\n                      // @ts-ignore\r\n                      setPopup((prevState) => {\r\n                        let inputs;\r\n                        if (prevState != null) {\r\n                          inputs = prevState?.inputs?.map((i) => {\r\n                            if (i.id === input.id) {\r\n                              i.value = e.target.value;\r\n                            }\r\n                            return i;\r\n                          });\r\n                        }\r\n                        // @ts-ignore\r\n                        return { ...prevState, inputs };\r\n                      });\r\n                    }}\r\n                    className=\"popup__input popup__input_type_name\"\r\n                    name=\"name\"\r\n                    id=\"name-input\"\r\n                    type={input.type}\r\n                    minLength={2}\r\n                    maxLength={40}\r\n                    placeholder={input.value}\r\n                  />\r\n                  <span className=\"popup__form-error name-input-error\"></span>\r\n                </>\r\n              );\r\n            })}\r\n            <button className=\"popup__save-button\" type=\"submit\">\r\n              Сохранить\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nexport default PopupWithForm;\r\n","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.tsx",["166","167","168"],[],"import React, { FormEvent } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport { useEditUserMutation } from \"../store/api/actionsApi\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { closeAllPopups } from \"../store/popupReducer\";\r\nimport { IUserInfo } from \"../store/types\";\r\n\r\nconst EditProfilePopup = () => {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const dispatch = useAppDispatch();\r\n  const [editUser] = useEditUserMutation();\r\n  const userId = useAppSelector((state) => state.auth.userId);\r\n  const [editUserById, setUsertById] = React.useState<IUserInfo>({\r\n    name: \"\",\r\n    about: \"\",\r\n    avatar: \"\",\r\n    userId: 0,\r\n  });\r\n\r\n  // React.useEffect(() => {\r\n  //   setName(currentUser.name);\r\n  //   setDescription(currentUser.about);\r\n  // }, [currentUser, props.isOpen]);\r\n\r\n  const handleEditUser = async (e: FormEvent<Element>) => {\r\n    e.preventDefault();\r\n    if (userId)\r\n      await editUser({\r\n        name: editUserById.name,\r\n        about: editUserById.about,\r\n        userId,\r\n      });\r\n    setUsertById({ name: name, about: description });\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n  };\r\n  console.log(editUserById);\r\n  return <PopupWithForm onSubmit={handleEditUser} />;\r\n};\r\nexport default EditProfilePopup;\r\n","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\api\\actionsApi.tsx",[],[],"C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\store\\userInfoSlice.tsx",["169"],[],"import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { store } from \"./store\";\r\nimport { IUserInfo } from \"./types\";\r\n\r\nconst initialState: IUserInfo = {\r\n  avatar: \"\",\r\n  name: \"\",\r\n  about: \"\",\r\n  userId: 0,\r\n};\r\n\r\nexport const userInfoSlice = createSlice({\r\n  name: \"userData\",\r\n  initialState,\r\n  reducers: {\r\n    getUserInfo: (\r\n      state,\r\n      action: PayloadAction<{ avatar: string; name: string; about: string }>\r\n    ) => {\r\n      state.avatar = action.payload.avatar;\r\n      state.name = action.payload.name;\r\n      state.about = action.payload.about;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getUserInfo } = userInfoSlice.actions;\r\nexport default userInfoSlice.reducer;\r\n","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.tsx",["170","171"],[],"import React, { FormEvent } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nconst EditAvatarPopup = () => {\r\n  const avatarRef = React.useRef();\r\n\r\n  // React.useEffect(() => {\r\n  //   avatarRef.current.value = \"\";\r\n  // }, [props.isOpen]);\r\n\r\n  // const handleSubmit = (e: FormEvent<Element> ) => {\r\n  //   e.preventDefault();\r\n\r\n  //   // props.onUpdateAvatar({\r\n  //   //   avatar: avatarRef.current.value,\r\n  //   // });\r\n  // };\r\n\r\n  return <PopupWithForm onSubmit={() => Promise.resolve()} />;\r\n};\r\nexport default EditAvatarPopup;\r\n","C:\\dev\\projects\\react-mesto-api-full\\frontend\\src\\components\\Config.tsx",[],[],{"ruleId":"172","severity":1,"message":"173","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":19},{"ruleId":"172","severity":1,"message":"176","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":29},{"ruleId":"172","severity":1,"message":"177","line":14,"column":37,"nodeType":"174","messageId":"175","endLine":14,"endColumn":42},{"ruleId":"178","severity":1,"message":"179","line":28,"column":6,"nodeType":"180","endLine":28,"endColumn":8,"suggestions":"181"},{"ruleId":"172","severity":1,"message":"182","line":12,"column":9,"nodeType":"174","messageId":"175","endLine":12,"endColumn":17},{"ruleId":"178","severity":1,"message":"183","line":38,"column":6,"nodeType":"180","endLine":38,"endColumn":17,"suggestions":"184"},{"ruleId":"172","severity":1,"message":"185","line":2,"column":8,"nodeType":"174","messageId":"175","endLine":2,"endColumn":12},{"ruleId":"172","severity":1,"message":"186","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":28},{"ruleId":"172","severity":1,"message":"187","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":25},{"ruleId":"172","severity":1,"message":"188","line":7,"column":3,"nodeType":"174","messageId":"175","endLine":7,"endColumn":17},{"ruleId":"172","severity":1,"message":"189","line":8,"column":3,"nodeType":"174","messageId":"175","endLine":8,"endColumn":22},{"ruleId":"172","severity":1,"message":"190","line":9,"column":3,"nodeType":"174","messageId":"175","endLine":9,"endColumn":24},{"ruleId":"172","severity":1,"message":"191","line":10,"column":3,"nodeType":"174","messageId":"175","endLine":10,"endColumn":25},{"ruleId":"172","severity":1,"message":"192","line":13,"column":10,"nodeType":"174","messageId":"175","endLine":13,"endColumn":21},{"ruleId":"172","severity":1,"message":"193","line":14,"column":8,"nodeType":"174","messageId":"175","endLine":14,"endColumn":21},{"ruleId":"172","severity":1,"message":"194","line":17,"column":10,"nodeType":"174","messageId":"175","endLine":17,"endColumn":21},{"ruleId":"172","severity":1,"message":"195","line":24,"column":17,"nodeType":"174","messageId":"175","endLine":24,"endColumn":26},{"ruleId":"172","severity":1,"message":"188","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":24},{"ruleId":"172","severity":1,"message":"188","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":24},{"ruleId":"172","severity":1,"message":"196","line":10,"column":9,"nodeType":"174","messageId":"175","endLine":10,"endColumn":20},{"ruleId":"172","severity":1,"message":"197","line":13,"column":9,"nodeType":"174","messageId":"175","endLine":13,"endColumn":17},{"ruleId":"172","severity":1,"message":"198","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":15},{"ruleId":"172","severity":1,"message":"199","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"200","line":5,"column":9,"nodeType":"174","messageId":"175","endLine":5,"endColumn":18},"@typescript-eslint/no-unused-vars","'InfoTooltip' is defined but never used.","Identifier","unusedVar","'FetchBaseQueryError' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'navigate' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["201"],"'navigate' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'data.accessToken', 'data.user.id', and 'dispatch'. Either include them or remove the dependency array.",["202"],"'Card' is defined but never used.","'CurrentUserContext' is defined but never used.","'useGetUserQuery' is defined but never used.","'closeAllPopups' is defined but never used.","'isAddPlacePopupOpen' is defined but never used.","'isEditAvatarPopupOpen' is defined but never used.","'isEditProfilePopupOpen' is defined but never used.","'getUserData' is defined but never used.","'PopupWithForm' is defined but never used.","'getUserInfo' is defined but never used.","'isSuccess' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'store' is defined but never used.","'FormEvent' is defined but never used.","'avatarRef' is assigned a value but never used.",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [navigate, token]",{"range":"207","text":"208"},"Update the dependencies array to be: [data.accessToken, data.user.id, dispatch, isSuccess]",{"range":"209","text":"210"},[863,865],"[navigate, token]",[1123,1134],"[data.accessToken, data.user.id, dispatch, isSuccess]"]