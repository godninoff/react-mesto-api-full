{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  popupIsOpen: false,\n  authSuccess: false\n};\nconst popupSlice = createSlice({\n  name: \"popup\",\n  initialState,\n  reducers: {\n    changePopupState: state => {\n      state.popupIsOpen = !state.popupIsOpen;\n    },\n    checkAuthSuccess: (state, action) => {\n      state.authSuccess = action.payload;\n    }\n  }\n});\nexport const {\n  changePopupState,\n  checkAuthSuccess\n} = popupSlice.actions;\nexport default popupSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","popupIsOpen","authSuccess","popupSlice","name","reducers","changePopupState","state","checkAuthSuccess","action","payload","actions","reducer"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/store/popupReducer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  popupIsOpen: false,\r\n  authSuccess: false,\r\n};\r\n\r\nconst popupSlice = createSlice({\r\n  name: \"popup\",\r\n  initialState,\r\n  reducers: {\r\n    changePopupState: (state) => {\r\n      state.popupIsOpen = !state.popupIsOpen;\r\n    },\r\n    checkAuthSuccess: (state, action) => {\r\n      state.authSuccess = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { changePopupState, checkAuthSuccess } = popupSlice.actions;\r\n\r\nexport default popupSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,KAAK;EAClBC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,gBAAgB,EAAGC,KAAK,IAAK;MAC3BA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC,CAAC;IACDO,gBAAgB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnCF,KAAK,CAACL,WAAW,GAAGO,MAAM,CAACC,OAAO;IACpC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,gBAAgB;EAAEE;AAAiB,CAAC,GAAGL,UAAU,CAACQ,OAAO;AAExE,eAAeR,UAAU,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}