{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  closeAllPopups: false,\n  authSuccess: false,\n  isEditProfilePopupOpen: false,\n  isAddPlacePopupOpen: false,\n  isEditAvatarPopupOpen: false\n};\nconst popupSlice = createSlice({\n  name: \"popup\",\n  initialState,\n  reducers: {\n    closeAllPopups: state => {\n      state.closeAllPopups = !state.closeAllPopups;\n    },\n    checkAuthSuccess: (state, action) => {\n      state.authSuccess = action.payload;\n    },\n    isEditProfilePopupOpen: state => {\n      state.closeAllPopups = !state.isEditProfilePopupOpen;\n    },\n    isAddPlacePopupOpen: state => {\n      state.closeAllPopups = !state.isAddPlacePopupOpen;\n    },\n    isEditAvatarPopupOpen: state => {\n      state.closeAllPopups = !state.isEditAvatarPopupOpen;\n    }\n  }\n});\nexport const {\n  closeAllPopups,\n  checkAuthSuccess\n} = popupSlice.actions;\nexport default popupSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","closeAllPopups","authSuccess","isEditProfilePopupOpen","isAddPlacePopupOpen","isEditAvatarPopupOpen","popupSlice","name","reducers","state","checkAuthSuccess","action","payload","actions","reducer"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/store/popupReducer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  closeAllPopups: false,\r\n  authSuccess: false,\r\n  isEditProfilePopupOpen: false,\r\n  isAddPlacePopupOpen: false,\r\n  isEditAvatarPopupOpen: false,\r\n};\r\n\r\nconst popupSlice = createSlice({\r\n  name: \"popup\",\r\n  initialState,\r\n  reducers: {\r\n    closeAllPopups: (state) => {\r\n      state.closeAllPopups = !state.closeAllPopups;\r\n    },\r\n    checkAuthSuccess: (state, action) => {\r\n      state.authSuccess = action.payload;\r\n    },\r\n    isEditProfilePopupOpen: (state) => {\r\n      state.closeAllPopups = !state.isEditProfilePopupOpen;\r\n    },\r\n    isAddPlacePopupOpen: (state) => {\r\n      state.closeAllPopups = !state.isAddPlacePopupOpen;\r\n    },\r\n    isEditAvatarPopupOpen: (state) => {\r\n      state.closeAllPopups = !state.isEditAvatarPopupOpen;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { closeAllPopups, checkAuthSuccess } = popupSlice.actions;\r\n\r\nexport default popupSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,cAAc,EAAE,KAAK;EACrBC,WAAW,EAAE,KAAK;EAClBC,sBAAsB,EAAE,KAAK;EAC7BC,mBAAmB,EAAE,KAAK;EAC1BC,qBAAqB,EAAE;AACzB,CAAC;AAED,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,OAAO;EACbP,YAAY;EACZQ,QAAQ,EAAE;IACRP,cAAc,EAAGQ,KAAK,IAAK;MACzBA,KAAK,CAACR,cAAc,GAAG,CAACQ,KAAK,CAACR,cAAc;IAC9C,CAAC;IACDS,gBAAgB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnCF,KAAK,CAACP,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IACDT,sBAAsB,EAAGM,KAAK,IAAK;MACjCA,KAAK,CAACR,cAAc,GAAG,CAACQ,KAAK,CAACN,sBAAsB;IACtD,CAAC;IACDC,mBAAmB,EAAGK,KAAK,IAAK;MAC9BA,KAAK,CAACR,cAAc,GAAG,CAACQ,KAAK,CAACL,mBAAmB;IACnD,CAAC;IACDC,qBAAqB,EAAGI,KAAK,IAAK;MAChCA,KAAK,CAACR,cAAc,GAAG,CAACQ,KAAK,CAACJ,qBAAqB;IACrD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,cAAc;EAAES;AAAiB,CAAC,GAAGJ,UAAU,CAACO,OAAO;AAEtE,eAAeP,UAAU,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}