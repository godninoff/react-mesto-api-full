{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./authSlice\";\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\nimport storage from \"redux-persist/lib/storage\";\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport { persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport { authApi } from \"./api/authApi\";\nimport showPopupReducer from \"./popupReducer\";\nimport { actionsApi } from \"./api/actionsApi\";\nconst rootReducer = combineReducers({\n  [authApi.reducerPath]: authApi.reducer,\n  [actionsApi.reducerPath]: actionsApi.reducer,\n  auth: authReducer,\n  popup: showPopupReducer\n});\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(authApi.middleware, actionsApi.middleware)\n});\nexport const persistor = persistStore(store);\nsetupListeners(store.dispatch);","map":{"version":3,"names":["combineReducers","configureStore","authReducer","setupListeners","storage","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authApi","showPopupReducer","actionsApi","rootReducer","reducerPath","reducer","auth","popup","persistConfig","key","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","persistor","dispatch"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/store/store.tsx"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./authSlice\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport persistReducer from \"redux-persist/es/persistReducer\";\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport { authApi } from \"./api/authApi\";\r\nimport showPopupReducer from \"./popupReducer\";\r\nimport { actionsApi } from \"./api/actionsApi\";\r\n\r\nconst rootReducer = combineReducers({\r\n  [authApi.reducerPath]: authApi.reducer,\r\n  [actionsApi.reducerPath]: actionsApi.reducer,\r\n  auth: authReducer,\r\n  popup: showPopupReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(authApi.middleware, actionsApi.middleware),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\nsetupListeners(store.dispatch);\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,aAAa;AACrC,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,SACEC,YAAY,EACZC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,gBAAgB,MAAM,gBAAgB;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,MAAMC,WAAW,GAAGhB,eAAe,CAAC;EAClC,CAACa,OAAO,CAACI,WAAW,GAAGJ,OAAO,CAACK,OAAO;EACtC,CAACH,UAAU,CAACE,WAAW,GAAGF,UAAU,CAACG,OAAO;EAC5CC,IAAI,EAAEjB,WAAW;EACjBkB,KAAK,EAAEN;AACT,CAAC,CAAC;AAEF,MAAMO,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXlB;AACF,CAAC;AAED,MAAMmB,gBAAgB,GAAGlB,cAAc,CAACgB,aAAa,EAAEL,WAAW,CAAC;AAEnE,OAAO,MAAMQ,KAAK,GAAGvB,cAAc,CAAC;EAClCiB,OAAO,EAAEK,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACrB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC,CAAC,CAACiB,MAAM,CAAChB,OAAO,CAACY,UAAU,EAAEV,UAAU,CAACU,UAAU;AACvD,CAAC,CAAC;AAEF,OAAO,MAAMK,SAAS,GAAGxB,YAAY,CAACkB,KAAK,CAAC;AAC5CrB,cAAc,CAACqB,KAAK,CAACO,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}