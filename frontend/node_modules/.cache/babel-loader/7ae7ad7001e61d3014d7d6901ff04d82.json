{"ast":null,"code":"class Api {\n  constructor({\n    address,\n    headers\n  }) {\n    this._address = address;\n    this._headers = headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  getUserInfo() {\n    return fetch(`${this._address}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._address}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  setUserInfo(formData) {\n    return fetch(`${this._address}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: formData.name,\n        about: formData.description\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  createCard(formData) {\n    return fetch(`${this._address}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: formData.name,\n        link: formData.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  removeCard(id) {\n    return fetch(`${this._address}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    return fetch(`${this._address}/cards/likes/${id}`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  updateAvatar(formData) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: formData.avatar\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n}\n\nconst api = new Api({\n  address: 'https://mesto.nomoreparties.co/v1/cohort-24',\n  headers: {\n    authorization: '680bd78d-11d7-4092-977f-23afe781bd9e',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/godni/dev/mesto-react-main/src/utils/Api.js"],"names":["Api","constructor","address","headers","_address","_headers","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","method","then","getInitialCards","setUserInfo","formData","body","JSON","stringify","name","about","description","createCard","link","removeCard","id","changeLikeCardStatus","isLiked","updateAvatar","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n    constructor({address, headers}) {\r\n        this._address = address;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка: ${res.status}`); \r\n        }\r\n        return res.json();\r\n      }\r\n\r\ngetUserInfo() {\r\n    return fetch(`${this._address}/users/me`, {\r\n        method: 'GET',\r\n        headers: this._headers\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\ngetInitialCards() {\r\n    return fetch(`${this._address}/cards`, {\r\n        method: 'GET',\r\n        headers: this._headers\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\nsetUserInfo(formData) {\r\n    return fetch(`${this._address}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n            name: formData.name,\r\n            about: formData.description\r\n        })\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\ncreateCard(formData) {\r\n    return fetch(`${this._address}/cards`, {\r\n        method: 'POST',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n            name: formData.name,\r\n            link: formData.link\r\n        })\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\nremoveCard(id) {\r\n    return fetch(`${this._address}/cards/${id}`, {\r\n        method: 'DELETE',\r\n        headers: this._headers,\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\nchangeLikeCardStatus(id, isLiked) {\r\n    return fetch(`${this._address}/cards/likes/${id}`, {\r\n        method: isLiked ? 'DELETE' : 'PUT',\r\n        headers: this._headers,\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\nupdateAvatar(formData) {\r\n    return fetch(`${this._address}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n            avatar: formData.avatar\r\n        })\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n}\r\n\r\nconst api = new Api ({\r\n    address: 'https://mesto.nomoreparties.co/v1/cohort-24',\r\n    headers: {\r\n    authorization: '680bd78d-11d7-4092-977f-23afe781bd9e',\r\n    'Content-Type': 'application/json'\r\n    },\r\n  });\r\n  \r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}