{"ast":null,"code":"class Api {\n  constructor({\n    address,\n    headers\n  }) {\n    this._address = address;\n    this._headers = headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  getUserInfo() {\n    return fetch(`${this._address}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this._address}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  setUserInfo(name, about) {\n    return fetch(`${this._address}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  createCard(name, link) {\n    return fetch(`${this._address}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  removeCard(id) {\n    return fetch(`${this._address}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    return fetch(`${this._address}/cards/likes/${id}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  setUserAvatar(avatarData) {\n    return fetch(`${this._address}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarData.avatar\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n}\n\n;\nconst api = new Api({\n  address: 'https://mesto.nomoreparties.co/v1/cohort-24',\n  headers: {\n    authorization: '680bd78d-11d7-4092-977f-23afe781bd9e',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/godni/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","address","headers","_address","_headers","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","method","then","getInitialCards","setUserInfo","name","about","body","JSON","stringify","createCard","link","removeCard","id","changeLikeCardStatus","isLiked","setUserAvatar","avatarData","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n    constructor({address, headers}) {\r\n        this._address = address;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка: ${res.status}`); \r\n        }\r\n        return res.json();\r\n      }\r\n\r\ngetUserInfo() {\r\n    return fetch(`${this._address}/users/me`, {\r\n        method: 'GET',\r\n        headers: this._headers\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\ngetInitialCards() {\r\n    return fetch(`${this._address}/cards`, {\r\n        method: 'GET',\r\n        headers: this._headers\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\nsetUserInfo(name, about) {\r\n    return fetch(`${this._address}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n            name: name,\r\n            about: about\r\n        })\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\ncreateCard(name, link) {\r\n    return fetch(`${this._address}/cards`, {\r\n        method: 'POST',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n            name: name,\r\n            link: link\r\n        })\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\nremoveCard(id) {\r\n    return fetch(`${this._address}/cards/${id}`, {\r\n        method: 'DELETE',\r\n        headers: this._headers,\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\nchangeLikeCardStatus(id, isLiked) {\r\n    return fetch(`${this._address}/cards/likes/${id}`, {\r\n        method: isLiked ? 'PUT' : 'DELETE',\r\n        headers: this._headers,\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n\r\nsetUserAvatar(avatarData) {\r\n    return fetch(`${this._address}/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: this._headers,\r\n        body: JSON.stringify({\r\n            avatar: avatarData.avatar\r\n        })\r\n    })\r\n    .then(res => this._getResponseData(res))\r\n}\r\n};\r\n\r\nconst api = new Api ({\r\n    address: 'https://mesto.nomoreparties.co/v1/cohort-24',\r\n    headers: {\r\n    authorization: '680bd78d-11d7-4092-977f-23afe781bd9e',\r\n    'Content-Type': 'application/json'\r\n    },\r\n  });\r\n  \r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}