{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\godni\\\\dev\\\\mesto-react-main\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport RemoveCardRequestPopup from './RemoveCardRequestPopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([userData, cards]) => {\n      setCurrentUser(userData);\n      setCards(cards);\n    }).catch(e => console.log(e));\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(e => console.log(e));\n  }\n\n  function handleCardRemove(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onCardDelete: handleCardRemove,\n        onCardLike: handleCardLike,\n        onCardClick: handleCardClick,\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RemoveCardRequestPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard !== null && selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v9p2Fc9899XX8jA7/xEEf7nPdSw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/godni/dev/mesto-react-main/src/components/App.js"],"names":["React","Header","Main","Footer","EditProfilePopup","AddPlacePopup","EditAvatarPopup","RemoveCardRequestPopup","ImagePopup","CurrentUserContext","api","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","Promise","all","getUserInfo","getInitialCards","then","userData","catch","e","console","log","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardRemove","removeCard","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport RemoveCardRequestPopup from './RemoveCardRequestPopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport api from '../utils/Api';\r\n\r\nfunction App() {\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState(null);\r\n    const [currentUser, setCurrentUser] = React.useState({});\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([\r\n            api.getUserInfo(), \r\n            api.getInitialCards()\r\n        ])\r\n            .then(([userData, cards]) => {\r\n                setCurrentUser(userData);\r\n                setCards(cards);\r\n            }).catch((e) => console.log(e));\r\n    },[]);\r\n\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n        api.changeLikeCardStatus(card._id, !isLiked)\r\n        .then((newCard) => {\r\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n\r\n    function handleCardRemove(card) {\r\n        api.removeCard(card._id)\r\n        .then(() => {\r\n            setCards((state) => state.filter((c) => c._id !== card._id));\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setSelectedCard(null);\r\n    }\r\n\r\n  return (\r\n    \r\n    <div className=\"root\">\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n            <Header />  \r\n            <Main onCardDelete={handleCardRemove} onCardLike={handleCardLike} onCardClick={handleCardClick} onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} cards={cards} />  \r\n            <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} />\r\n            <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} />\r\n            <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} />\r\n            <RemoveCardRequestPopup />\r\n            <ImagePopup card={selectedCard !== null && selectedCard} onClose={closeAllPopups} />\r\n            <Footer /> \r\n        </CurrentUserContext.Provider>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}