{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\projects\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\InfoTooltip.tsx\",\n  _s = $RefreshSig$();\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { closeAllPopups } from \"../store/popupReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorIcon = require(\"../images/error-icon.png\");\nconst successIcon = require(\"../images/success-icon.png\");\nconst InfoTooltip = () => {\n  _s();\n  const popupClose = useAppSelector(state => state.popup.closeAllPopups);\n  const success = useAppSelector(state => state.popup.authSuccess);\n  const dispatch = useAppDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup ${popupClose ? \"popup_visible\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close-button\",\n        type: \"button\",\n        onClick: () => dispatch(closeAllPopups()),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__authorization\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"popup__authorization-icon\",\n          src: success ? successIcon : errorIcon,\n          alt: \"\\u0417\\u043D\\u0430\\u0447\\u043E\\u043A \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"popup__authorization-text\",\n          children: success ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(InfoTooltip, \"fBHcscuaCq62+y8CAiRNfnL90Go=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppDispatch];\n});\n_c = InfoTooltip;\nexport default InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["useAppDispatch","useAppSelector","closeAllPopups","jsxDEV","_jsxDEV","errorIcon","require","successIcon","InfoTooltip","_s","popupClose","state","popup","success","authSuccess","dispatch","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/components/InfoTooltip.tsx"],"sourcesContent":["import { useAppDispatch, useAppSelector } from \"../store/hooks\";\r\nimport { closeAllPopups } from \"../store/popupReducer\";\r\nconst errorIcon = require(\"../images/error-icon.png\") as string;\r\nconst successIcon = require(\"../images/success-icon.png\") as string;\r\n\r\nconst InfoTooltip = () => {\r\n  const popupClose = useAppSelector((state) => state.popup.closeAllPopups);\r\n  const success = useAppSelector((state) => state.popup.authSuccess);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <div className={`popup ${popupClose ? \"popup_visible\" : \"\"}`}>\r\n      <div className=\"popup__container\">\r\n        <button\r\n          className=\"popup__close-button\"\r\n          type=\"button\"\r\n          onClick={() => dispatch(closeAllPopups())}\r\n        >\r\n          &times;\r\n        </button>\r\n\r\n        <div className=\"popup__authorization\">\r\n          <img\r\n            className=\"popup__authorization-icon\"\r\n            src={success ? successIcon : errorIcon}\r\n            alt=\"Значок авторизации\"\r\n          />\r\n          <p className=\"popup__authorization-text\">\r\n            {success\r\n              ? \"Вы успешно зарегистрировались!\"\r\n              : \"Что-то пошло не так! Попробуйте ещё раз.\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoTooltip;\r\n"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC/D,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvD,MAAMC,SAAS,GAAGC,OAAO,CAAC,0BAA0B,CAAW;AAC/D,MAAMC,WAAW,GAAGD,OAAO,CAAC,4BAA4B,CAAW;AAEnE,MAAME,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,UAAU,GAAGT,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACV,cAAc,CAAC;EACxE,MAAMW,OAAO,GAAGZ,cAAc,CAAEU,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACE,WAAW,CAAC;EAElE,MAAMC,QAAQ,GAAGf,cAAc,EAAE;EAEjC,oBACEI,OAAA;IAAKY,SAAS,EAAG,SAAQN,UAAU,GAAG,eAAe,GAAG,EAAG,EAAE;IAAAO,QAAA,eAC3Db,OAAA;MAAKY,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/Bb,OAAA;QACEY,SAAS,EAAC,qBAAqB;QAC/BE,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAACb,cAAc,EAAE,CAAE;QAAAe,QAAA,EAC3C;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAETnB,OAAA;QAAKY,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCb,OAAA;UACEY,SAAS,EAAC,2BAA2B;UACrCQ,GAAG,EAAEX,OAAO,GAAGN,WAAW,GAAGF,SAAU;UACvCoB,GAAG,EAAC;QAAoB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxB,eACFnB,OAAA;UAAGY,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EACrCJ,OAAO,GACJ,gCAAgC,GAChC;QAA0C;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACd,EAAA,CAhCID,WAAW;EAAA,QACIP,cAAc,EACjBA,cAAc,EAEbD,cAAc;AAAA;AAAA0B,EAAA,GAJ3BlB,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}