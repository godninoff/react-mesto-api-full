{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  token: null,\n  userId: null\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    getUserData: (state, action) => {\n      state.token = action.payload.token;\n      state.userId = action.payload.userId;\n    },\n    signOut(state) {\n      state.token = null;\n      state.userId = null;\n    }\n  }\n});\nexport const {\n  getUserData,\n  signOut\n} = authSlice.actions;\nexport const selectToken = state => state.auth.token;\nexport const selectUser = state => state.auth.userId;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","token","userId","authSlice","name","reducers","getUserData","state","action","payload","signOut","actions","selectToken","auth","selectUser","reducer"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/store/authSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { store } from \"./store\";\r\n\r\nexport interface Auth {\r\n  token: string | null;\r\n  userId: number | null;\r\n  id: number | null;\r\n}\r\n\r\nconst initialState: Auth = {\r\n  token: null,\r\n  userId: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    getUserData: (\r\n      state,\r\n      action: PayloadAction<{ token: string; userId: number }>\r\n    ) => {\r\n      state.token = action.payload.token;\r\n      state.userId = action.payload.userId;\r\n    },\r\n    signOut(state) {\r\n      state.token = null;\r\n      state.userId = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getUserData, signOut } = authSlice.actions;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport const selectToken = (state: RootState) => state.auth.token;\r\nexport const selectUser = (state: RootState) => state.auth.userId;\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAS7D,MAAMC,YAAkB,GAAG;EACzBC,KAAK,EAAE,IAAI;EACXC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,WAAW,EAAEA,CACXC,KAAK,EACLC,MAAwD,KACrD;MACHD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;MAClCM,KAAK,CAACL,MAAM,GAAGM,MAAM,CAACC,OAAO,CAACP,MAAM;IACtC,CAAC;IACDQ,OAAOA,CAACH,KAAK,EAAE;MACbA,KAAK,CAACN,KAAK,GAAG,IAAI;MAClBM,KAAK,CAACL,MAAM,GAAG,IAAI;IACrB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,WAAW;EAAEI;AAAQ,CAAC,GAAGP,SAAS,CAACQ,OAAO;AAKzD,OAAO,MAAMC,WAAW,GAAIL,KAAgB,IAAKA,KAAK,CAACM,IAAI,CAACZ,KAAK;AACjE,OAAO,MAAMa,UAAU,GAAIP,KAAgB,IAAKA,KAAK,CAACM,IAAI,CAACX,MAAM;AAEjE,eAAeC,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}