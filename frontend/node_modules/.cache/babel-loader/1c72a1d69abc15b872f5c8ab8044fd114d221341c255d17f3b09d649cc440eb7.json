{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  avatar: \"\",\n  name: \"\",\n  about: \"\"\n};\nexport const userInfoSlice = createSlice({\n  name: \"userData\",\n  initialState,\n  reducers: {\n    getUserInfo: (state, action) => {\n      state.avatar = action.payload.avatar;\n      state.name = action.payload.name;\n      state.about = action.payload.about;\n    }\n  }\n});\nexport const {\n  getUserInfo\n} = userInfoSlice.actions;\nexport default userInfoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","avatar","name","about","userInfoSlice","reducers","getUserInfo","state","action","payload","actions","reducer"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/store/userInfoSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { store } from \"./store\";\r\nimport { IUserInfo } from \"./types\";\r\n\r\nconst initialState: IUserInfo = {\r\n  avatar: \"\",\r\n  name: \"\",\r\n  about: \"\",\r\n};\r\n\r\nexport const userInfoSlice = createSlice({\r\n  name: \"userData\",\r\n  initialState,\r\n  reducers: {\r\n    getUserInfo: (\r\n      state,\r\n      action: PayloadAction<{ avatar: string; name: string; about: string }>\r\n    ) => {\r\n      state.avatar = action.payload.avatar;\r\n      state.name = action.payload.name;\r\n      state.about = action.payload.about;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { getUserInfo } = userInfoSlice.actions;\r\nexport default userInfoSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAI7D,MAAMC,YAAuB,GAAG;EAC9BC,MAAM,EAAE,EAAE;EACVC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGL,WAAW,CAAC;EACvCG,IAAI,EAAE,UAAU;EAChBF,YAAY;EACZK,QAAQ,EAAE;IACRC,WAAW,EAAEA,CACXC,KAAK,EACLC,MAAsE,KACnE;MACHD,KAAK,CAACN,MAAM,GAAGO,MAAM,CAACC,OAAO,CAACR,MAAM;MACpCM,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO,CAACP,IAAI;MAChCK,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO,CAACN,KAAK;IACpC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG;AAAY,CAAC,GAAGF,aAAa,CAACM,OAAO;AACpD,eAAeN,aAAa,CAACO,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}