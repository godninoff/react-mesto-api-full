{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\godni\\\\dev\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport ConfirmPopup from './ConfirmPopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport { Route, Switch } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([userData, cards]) => {\n      setCurrentUser(userData);\n      setCards(cards);\n    }).catch(e => console.log(e));\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(e => console.log(e));\n  }\n\n  function handleCardRemove(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(e => console.log(e));\n  }\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.setUserInfo(name, about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(e => console.log(e));\n  }\n\n  function handleUpdateAvatar(avatarData) {\n    api.setUserAvatar(avatarData).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(e => console.log(e));\n  }\n\n  function handleAddPlaceSubmit(name, link) {\n    api.createCard(name, link).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(e => console.log(e));\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          onCardDelete: handleCardRemove,\n          onCardLike: handleCardLike,\n          onCardClick: handleCardClick,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        onUpdateUser: handleUpdateUser,\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        onAddPlace: handleAddPlaceSubmit,\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard !== null && selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v9p2Fc9899XX8jA7/xEEf7nPdSw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/godni/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","EditProfilePopup","AddPlacePopup","EditAvatarPopup","ConfirmPopup","ImagePopup","CurrentUserContext","api","Route","Switch","ProtectedRoute","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","Promise","all","getUserInfo","getInitialCards","then","userData","catch","e","console","log","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardRemove","removeCard","filter","handleUpdateUser","name","about","setUserInfo","res","closeAllPopups","handleUpdateAvatar","avatarData","setUserAvatar","handleAddPlaceSubmit","link","createCard","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport ConfirmPopup from './ConfirmPopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport api from '../utils/api';\r\nimport {Route, Switch} from 'react-router-dom'; \r\nimport ProtectedRoute from './ProtectedRoute';\r\n\r\nfunction App() {\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState(null);\r\n    const [currentUser, setCurrentUser] = React.useState({});\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([\r\n            api.getUserInfo(), \r\n            api.getInitialCards()\r\n        ])\r\n            .then(([userData, cards]) => {\r\n                setCurrentUser(userData);\r\n                setCards(cards);\r\n            }).catch((e) => console.log(e));\r\n    },[]);\r\n\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n        api.changeLikeCardStatus(card._id, !isLiked)\r\n        .then((newCard) => {\r\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n\r\n    function handleCardRemove(card) {\r\n        api.removeCard(card._id)\r\n        .then(() => {\r\n            setCards((state) => state.filter((c) => c._id !== card._id));\r\n        }).catch((e) => console.log(e));\r\n    }\r\n\r\n    function handleUpdateUser({name, about}) {\r\n        api.setUserInfo(name, about)\r\n        .then((res) => {\r\n            setCurrentUser(res);\r\n            closeAllPopups();\r\n        }).catch((e) => console.log(e));   \r\n    }\r\n\r\n    function handleUpdateAvatar(avatarData) {\r\n        api.setUserAvatar(avatarData)\r\n        .then((res) => {\r\n            setCurrentUser(res);\r\n            closeAllPopups(); \r\n        }).catch((e) => console.log(e));\r\n    }\r\n\r\n    function handleAddPlaceSubmit(name, link) {\r\n        api.createCard(name, link)\r\n        .then((res) => {\r\n            setCards([res, ...cards]);\r\n            closeAllPopups();  \r\n        }).catch((e) => console.log(e));\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setSelectedCard(null);\r\n    }\r\n\r\n  return (\r\n    \r\n    <div className=\"root\">\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n            <Header />  \r\n            <Switch>\r\n                <ProtectedRoute \r\n                    exact\r\n                    path=\"/\"\r\n                    component={Main}\r\n                    onCardDelete={handleCardRemove} \r\n                    onCardLike={handleCardLike} \r\n                    onCardClick={handleCardClick} \r\n                    onEditAvatar={handleEditAvatarClick} \r\n                    onEditProfile={handleEditProfileClick} \r\n                    onAddPlace={handleAddPlaceClick} \r\n                    cards={cards} \r\n                />\r\n            </Switch> \r\n            <EditProfilePopup \r\n                onUpdateUser={handleUpdateUser}  \r\n                isOpen={isEditProfilePopupOpen} \r\n                onClose={closeAllPopups} \r\n            />\r\n            <AddPlacePopup \r\n                onAddPlace={handleAddPlaceSubmit} \r\n                isOpen={isAddPlacePopupOpen} \r\n                onClose={closeAllPopups} \r\n            />\r\n            <EditAvatarPopup \r\n                isOpen={isEditAvatarPopupOpen} \r\n                onClose={closeAllPopups} \r\n                onUpdateAvatar={handleUpdateAvatar} \r\n            />\r\n            <ConfirmPopup />\r\n            <ImagePopup \r\n                card={selectedCard !== null && selectedCard} \r\n                onClose={closeAllPopups} \r\n            />\r\n            <Footer /> \r\n        </CurrentUserContext.Provider>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}