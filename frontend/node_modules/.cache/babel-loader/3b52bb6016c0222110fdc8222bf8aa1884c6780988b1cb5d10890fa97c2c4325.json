{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const authApi = createApi({\n  reducerPath: \"authApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3002/\",\n    credentials: \"include\",\n    prepareHeaders: (headers, _ref) => {\n      let {\n        getState\n      } = _ref;\n      const token = getState().auth.token;\n      if (token) {\n        headers.set(\"authentication\", `Bearer ${token}`);\n      }\n      return headers;\n    }\n  }),\n  endpoints: build => ({\n    signIn: build.mutation({\n      query: body => {\n        return {\n          url: \"signin\",\n          method: \"POST\",\n          body\n        };\n      }\n    }),\n    signUp: build.mutation({\n      query: body => {\n        return {\n          url: \"signup\",\n          method: \"POST\",\n          body\n        };\n      }\n    }),\n    getUser: build.query({\n      query: id => `users/${id}`\n    })\n  })\n});\nexport const {\n  useSignInMutation,\n  useSignUpMutation,\n  useGetUserQuery\n} = authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","reducerPath","baseQuery","baseUrl","credentials","prepareHeaders","headers","_ref","getState","token","auth","set","endpoints","build","signIn","mutation","query","body","url","method","signUp","getUser","id","useSignInMutation","useSignUpMutation","useGetUserQuery"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/store/api/authApi.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { RootState } from \"../authSlice\";\r\nimport { IUser } from \"../types\";\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: \"authApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"http://localhost:3002/\",\r\n    credentials: \"include\",\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = (getState() as RootState).auth.token;\r\n      if (token) {\r\n        headers.set(\"authentication\", `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  endpoints: (build) => ({\r\n    signIn: build.mutation({\r\n      query: (body: { email: string; password: string }) => {\r\n        return {\r\n          url: \"signin\",\r\n          method: \"POST\",\r\n          body,\r\n        };\r\n      },\r\n    }),\r\n    signUp: build.mutation({\r\n      query: (body: { email: string; password: string }) => {\r\n        return {\r\n          url: \"signup\",\r\n          method: \"POST\",\r\n          body,\r\n        };\r\n      },\r\n    }),\r\n    getUser: build.query<IUser, void>({\r\n      query: (id) => `users/${id}`,\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useSignInMutation, useSignUpMutation, useGetUserQuery } =\r\n  authApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAIxE,OAAO,MAAMC,OAAO,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEH,cAAc,CAAC;IACxBI,OAAO,EAAE,wBAAwB;IACjCC,WAAW,EAAE,SAAS;IACtBC,cAAc,EAAEA,CAACC,OAAO,EAAAC,IAAA,KAAmB;MAAA,IAAjB;QAAEC;MAAS,CAAC,GAAAD,IAAA;MACpC,MAAME,KAAK,GAAID,QAAQ,EAAE,CAAeE,IAAI,CAACD,KAAK;MAClD,IAAIA,KAAK,EAAE;QACTH,OAAO,CAACK,GAAG,CAAC,gBAAgB,EAAG,UAASF,KAAM,EAAC,CAAC;MAClD;MACA,OAAOH,OAAO;IAChB;EACF,CAAC,CAAC;EACFM,SAAS,EAAGC,KAAK,KAAM;IACrBC,MAAM,EAAED,KAAK,CAACE,QAAQ,CAAC;MACrBC,KAAK,EAAGC,IAAyC,IAAK;QACpD,OAAO;UACLC,GAAG,EAAE,QAAQ;UACbC,MAAM,EAAE,MAAM;UACdF;QACF,CAAC;MACH;IACF,CAAC,CAAC;IACFG,MAAM,EAAEP,KAAK,CAACE,QAAQ,CAAC;MACrBC,KAAK,EAAGC,IAAyC,IAAK;QACpD,OAAO;UACLC,GAAG,EAAE,QAAQ;UACbC,MAAM,EAAE,MAAM;UACdF;QACF,CAAC;MACH;IACF,CAAC,CAAC;IACFI,OAAO,EAAER,KAAK,CAACG,KAAK,CAAc;MAChCA,KAAK,EAAGM,EAAE,IAAM,SAAQA,EAAG;IAC7B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,iBAAiB;EAAEC,iBAAiB;EAAEC;AAAgB,CAAC,GACpEzB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}