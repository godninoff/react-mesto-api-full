{"ast":null,"code":"import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/query/react\";export var authApi=createApi({reducerPath:\"authApi\",baseQuery:fetchBaseQuery({baseUrl:\"http://localhost:3002/\",credentials:\"include\",prepareHeaders:function prepareHeaders(headers,_ref){var getState=_ref.getState;var token=getState().auth.token;if(token){headers.set(\"authentication\",\"Bearer \".concat(token));}return headers;}}),endpoints:function endpoints(build){return{signIn:build.mutation({query:function query(body){return{url:\"signin\",method:\"POST\",body:body};}}),signUp:build.mutation({query:function query(body){return{url:\"signup\",method:\"POST\",body:body};}}),getUser:build.query({query:function query(id){return\"users/\".concat(id);}})};}});var useSignInMutation=authApi.useSignInMutation,useSignUpMutation=authApi.useSignUpMutation,useGetUserQuery=authApi.useGetUserQuery;export{useSignInMutation,useSignUpMutation,useGetUserQuery};","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","reducerPath","baseQuery","baseUrl","credentials","prepareHeaders","headers","_ref","getState","token","auth","set","concat","endpoints","build","signIn","mutation","query","body","url","method","signUp","getUser","id","useSignInMutation","useSignUpMutation","useGetUserQuery"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/store/api/authApi.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { RootState } from \"../authSlice\";\r\nimport { IUser } from \"../types\";\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: \"authApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"http://localhost:3002/\",\r\n    credentials: \"include\",\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = (getState() as RootState).auth.token;\r\n      if (token) {\r\n        headers.set(\"authentication\", `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  endpoints: (build) => ({\r\n    signIn: build.mutation({\r\n      query: (body: { email: string; password: string }) => {\r\n        return {\r\n          url: \"signin\",\r\n          method: \"POST\",\r\n          body,\r\n        };\r\n      },\r\n    }),\r\n    signUp: build.mutation({\r\n      query: (body: { email: string; password: string }) => {\r\n        return {\r\n          url: \"signup\",\r\n          method: \"POST\",\r\n          body,\r\n        };\r\n      },\r\n    }),\r\n    getUser: build.query<IUser, number | null>({\r\n      query: (id) => `users/${id}`,\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useSignInMutation, useSignUpMutation, useGetUserQuery } =\r\n  authApi;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,cAAc,KAAQ,8BAA8B,CAIxE,MAAO,IAAM,CAAAC,OAAO,CAAGF,SAAS,CAAC,CAC/BG,WAAW,CAAE,SAAS,CACtBC,SAAS,CAAEH,cAAc,CAAC,CACxBI,OAAO,CAAE,wBAAwB,CACjCC,WAAW,CAAE,SAAS,CACtBC,cAAc,CAAE,SAAAA,eAACC,OAAO,CAAAC,IAAA,CAAmB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAClC,GAAM,CAAAC,KAAK,CAAID,QAAQ,EAAE,CAAeE,IAAI,CAACD,KAAK,CAClD,GAAIA,KAAK,CAAE,CACTH,OAAO,CAACK,GAAG,CAAC,gBAAgB,WAAAC,MAAA,CAAYH,KAAK,EAAG,CAClD,CACA,MAAO,CAAAH,OAAO,CAChB,CACF,CAAC,CAAC,CACFO,SAAS,CAAE,SAAAA,UAACC,KAAK,QAAM,CACrBC,MAAM,CAAED,KAAK,CAACE,QAAQ,CAAC,CACrBC,KAAK,CAAE,SAAAA,MAACC,IAAyC,CAAK,CACpD,MAAO,CACLC,GAAG,CAAE,QAAQ,CACbC,MAAM,CAAE,MAAM,CACdF,IAAI,CAAJA,IACF,CAAC,CACH,CACF,CAAC,CAAC,CACFG,MAAM,CAAEP,KAAK,CAACE,QAAQ,CAAC,CACrBC,KAAK,CAAE,SAAAA,MAACC,IAAyC,CAAK,CACpD,MAAO,CACLC,GAAG,CAAE,QAAQ,CACbC,MAAM,CAAE,MAAM,CACdF,IAAI,CAAJA,IACF,CAAC,CACH,CACF,CAAC,CAAC,CACFI,OAAO,CAAER,KAAK,CAACG,KAAK,CAAuB,CACzCA,KAAK,CAAE,SAAAA,MAACM,EAAE,iBAAAX,MAAA,CAAcW,EAAE,GAC5B,CAAC,CACH,CAAC,EACH,CAAC,CAAC,CAEK,GAAQ,CAAAC,iBAAiB,CAC9BxB,OAAO,CADMwB,iBAAiB,CAAEC,iBAAiB,CACjDzB,OAAO,CADyByB,iBAAiB,CAAEC,eAAe,CAClE1B,OAAO,CAD4C0B,eAAe,CAC1D,OAAAF,iBAAA,CAAAC,iBAAA,CAAAC,eAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}