{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\projects\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\EditProfilePopup.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { useEditUserMutation } from \"../store/api/actionsApi\";\nimport { useAppDispatch } from \"../store/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProfilePopup = () => {\n  _s();\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const dispatch = useAppDispatch();\n  const [editUser] = useEditUserMutation();\n\n  // React.useEffect(() => {\n  //   setName(currentUser.name);\n  //   setDescription(currentUser.about);\n  // }, [currentUser, props.isOpen]);\n\n  const handleEditUser = async () => {\n    await editUser({\n      name: name,\n      about: description\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"popup_edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    buttonSaveText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onSubmit: handleEditUser\n\n    // onClose={props.onClose}\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      value: name || \"\",\n      onChange: e => setName(e.target.value),\n      className: \"popup__input popup__input_type_name\",\n      name: \"name\",\n      id: \"name-input\",\n      type: \"text\",\n      minLength: 2,\n      maxLength: 40,\n      placeholder: \"\\u0418\\u043C\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__form-error name-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      value: description || \"\",\n      onChange: e => setDescription(e.target.value),\n      className: \"popup__input popup__input_type_description\",\n      name: \"about\",\n      id: \"description-input\",\n      type: \"text\",\n      minLength: 2,\n      maxLength: 200,\n      placeholder: \"\\u0412\\u0438\\u0434 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__form-error description-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProfilePopup, \"Ml78a9J/CuV6AQ5vF6UnrhzKfng=\", false, function () {\n  return [useAppDispatch, useEditUserMutation];\n});\n_c = EditProfilePopup;\nexport default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","PopupWithForm","CurrentUserContext","useEditUserMutation","useAppDispatch","jsxDEV","_jsxDEV","EditProfilePopup","_s","currentUser","useContext","name","setName","useState","description","setDescription","dispatch","editUser","handleEditUser","about","title","buttonSaveText","onSubmit","children","required","value","onChange","e","target","className","id","type","minLength","maxLength","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/components/EditProfilePopup.tsx"],"sourcesContent":["import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport { useEditUserMutation } from \"../store/api/actionsApi\";\r\nimport { useAppDispatch } from \"../store/hooks\";\r\nimport { changePopupState } from \"../store/popupReducer\";\r\n\r\nconst EditProfilePopup = () => {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const dispatch = useAppDispatch();\r\n  const [editUser] = useEditUserMutation();\r\n\r\n  // React.useEffect(() => {\r\n  //   setName(currentUser.name);\r\n  //   setDescription(currentUser.about);\r\n  // }, [currentUser, props.isOpen]);\r\n\r\n  const handleEditUser = async () => {\r\n    await editUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"popup_edit\"\r\n      title=\"Редактировать профиль\"\r\n      buttonSaveText=\"Сохранить\"\r\n      onSubmit={handleEditUser}\r\n\r\n      // onClose={props.onClose}\r\n    >\r\n      <input\r\n        required\r\n        value={name || \"\"}\r\n        onChange={(e) => setName(e.target.value)}\r\n        className=\"popup__input popup__input_type_name\"\r\n        name=\"name\"\r\n        id=\"name-input\"\r\n        type=\"text\"\r\n        minLength={2}\r\n        maxLength={40}\r\n        placeholder=\"Имя\"\r\n      />\r\n      <span className=\"popup__form-error name-input-error\"></span>\r\n      <input\r\n        required\r\n        value={description || \"\"}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        className=\"popup__input popup__input_type_description\"\r\n        name=\"about\"\r\n        id=\"description-input\"\r\n        type=\"text\"\r\n        minLength={2}\r\n        maxLength={200}\r\n        placeholder=\"Вид деятельности\"\r\n      />\r\n      <span className=\"popup__form-error description-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n};\r\nexport default EditProfilePopup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,WAAW,GAAGT,KAAK,CAACU,UAAU,CAACR,kBAAkB,CAAC;EACxD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMG,QAAQ,GAAGZ,cAAc,EAAE;EACjC,MAAM,CAACa,QAAQ,CAAC,GAAGd,mBAAmB,EAAE;;EAExC;EACA;EACA;EACA;;EAEA,MAAMe,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMD,QAAQ,CAAC;MACbN,IAAI,EAAEA,IAAI;MACVQ,KAAK,EAAEL;IACT,CAAC,CAAC;EACJ,CAAC;EAED,oBACER,OAAA,CAACL,aAAa;IACZU,IAAI,EAAC,YAAY;IACjBS,KAAK,EAAC,2HAAuB;IAC7BC,cAAc,EAAC,wDAAW;IAC1BC,QAAQ,EAAEJ;;IAEV;IAAA;IAAAK,QAAA,gBAEAjB,OAAA;MACEkB,QAAQ;MACRC,KAAK,EAAEd,IAAI,IAAI,EAAG;MAClBe,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,SAAS,EAAC,qCAAqC;MAC/ClB,IAAI,EAAC,MAAM;MACXmB,EAAE,EAAC,YAAY;MACfC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAE,CAAE;MACbC,SAAS,EAAE,EAAG;MACdC,WAAW,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjB,eACFhC,OAAA;MAAMuB,SAAS,EAAC;IAAoC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC5DhC,OAAA;MACEkB,QAAQ;MACRC,KAAK,EAAEX,WAAW,IAAI,EAAG;MACzBY,QAAQ,EAAGC,CAAC,IAAKZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,SAAS,EAAC,4CAA4C;MACtDlB,IAAI,EAAC,OAAO;MACZmB,EAAE,EAAC,mBAAmB;MACtBC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAE,CAAE;MACbC,SAAS,EAAE,GAAI;MACfC,WAAW,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B,eACFhC,OAAA;MAAMuB,SAAS,EAAC;IAA2C;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrD;AAEpB,CAAC;AAAC9B,EAAA,CAxDID,gBAAgB;EAAA,QAIHH,cAAc,EACZD,mBAAmB;AAAA;AAAAoC,EAAA,GALlChC,gBAAgB;AAyDtB,eAAeA,gBAAgB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}