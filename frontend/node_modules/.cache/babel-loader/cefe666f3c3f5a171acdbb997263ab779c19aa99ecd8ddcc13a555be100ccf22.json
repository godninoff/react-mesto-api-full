{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\projects\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\App.tsx\";\n// import React from \"react\";\n// import Header from \"./Header\";\n// import Main from \"./Main\";\n// import Footer from \"./Footer\";\n// import EditProfilePopup from \"./EditProfilePopup\";\n// import AddPlacePopup from \"./AddPlacePopup\";\n// import EditAvatarPopup from \"./EditAvatarPopup\";\n// import ConfirmPopup from \"./ConfirmPopup\";\n// import ImagePopup from \"./ImagePopup\";\n// import { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n// import api from \"../utils/api\";\n// import { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\n// import ProtectedRoute from \"./ProtectedRoute\";\n// import Login from \"./Login\";\n// import Register from \"./Register\";\n// import InfoTooltip from \"./InfoTooltip\";\n// import * as auth from \"../utils/auth\";\n\n// function App() {\n//   const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n//     React.useState(false);\n//   const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n//   const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n//     React.useState(false);\n//   const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n//   const [selectedCard, setSelectedCard] = React.useState(null);\n//   const [currentUser, setCurrentUser] = React.useState({});\n//   const [cards, setCards] = React.useState([]);\n//   const [isSuccess, setIsSuccess] = React.useState(false);\n//   const [loggedIn, setLoggedIn] = React.useState(false);\n//   const [email, setEmail] = React.useState(\"\");\n//   const history = useHistory();\n\n//   React.useEffect(() => {\n//     Promise.all([api.getUserInfo(), api.getInitialCards()])\n//       .then(([userData, cards]) => {\n//         setCurrentUser(userData.data);\n//         setCards(cards.data);\n//       })\n//       .catch((e) => console.log(e));\n//   }, []);\n\n//   React.useEffect(() => {\n//     if (localStorage.getItem(\"jwt\")) {\n//       const jwt = localStorage.getItem(\"jwt\");\n//       auth\n//         .checkToken(jwt)\n//         .then((res) => {\n//           if (res) {\n//             setEmail(res.data.email);\n//           }\n//           setLoggedIn(true);\n//           history.push(\"/\");\n//         })\n//         .catch((e) => {\n//           console.error(e);\n//           setIsInfoTooltipOpen(true);\n//         });\n//     }\n//   });\n\n//   function handleCardLike(card) {\n//     const isLiked = card.likes.some((i) => i._id === currentUser._id);\n//     api\n//       .changeLikeCardStatus(card._id, !isLiked)\n//       .then((newCard) => {\n//         setCards((state) =>\n//           state.map((c) => (c._id === card._id ? newCard.data : c))\n//         );\n//       })\n//       .catch((e) => console.log(e));\n//   }\n\n//   function handleCardRemove(card) {\n//     api\n//       .removeCard(card._id)\n//       .then(() => {\n//         setCards((state) => state.filter((c) => c._id !== card._id));\n//       })\n//       .catch((e) => console.log(e));\n//   }\n\n//   function handleUpdateUser({ name, about }) {\n//     api\n//       .setUserInfo(name, about)\n//       .then((res) => {\n//         setCurrentUser({\n//           ...currentUser,\n//           name: res.data.name,\n//           about: res.data.about,\n//         });\n//         closeAllPopups();\n//       })\n//       .catch((e) => console.log(e));\n//   }\n\n//   function handleUpdateAvatar(avatarData) {\n//     api\n//       .setUserAvatar(avatarData)\n//       .then((res) => {\n//         setCurrentUser({ ...currentUser, avatar: res.data.avatar });\n//         closeAllPopups();\n//       })\n//       .catch((e) => console.log(e));\n//   }\n\n//   function handleAddPlaceSubmit(name, link) {\n//     api\n//       .createCard(name, link)\n//       .then((res) => {\n//         setCards([res.data, ...cards]);\n//         closeAllPopups();\n//       })\n//       .catch((e) => console.log(e));\n//   }\n\n//   function handleEditAvatarClick() {\n//     setIsEditAvatarPopupOpen(true);\n//   }\n\n//   function handleEditProfileClick() {\n//     setIsEditProfilePopupOpen(true);\n//   }\n\n//   function handleAddPlaceClick() {\n//     setIsAddPlacePopupOpen(true);\n//   }\n\n//   function handleCardClick(card) {\n//     setSelectedCard(card);\n//   }\n\n//   function closeAllPopups() {\n//     setIsEditAvatarPopupOpen(false);\n//     setIsEditProfilePopupOpen(false);\n//     setIsInfoTooltipOpen(false);\n//     setIsAddPlacePopupOpen(false);\n//     setSelectedCard(null);\n//   }\n\n//   function handleRegisterSubmit(email, password) {\n//     auth\n//       .register(email, password)\n//       .then((data) => {\n//         if (data) {\n//           localStorage.setItem(\"jwt\", data.jwt);\n//           setEmail(data.data.email);\n//         }\n//         history.push(\"/sign-in\");\n//         setIsSuccess(true);\n//         setIsInfoTooltipOpen(true);\n//       })\n//       .catch((e) => {\n//         console.error(e);\n//         setIsSuccess(false);\n//         setIsInfoTooltipOpen(true);\n//       });\n//   }\n\n//   function handleLoginSubmit(email, password) {\n//     return auth\n//       .authorization(email, password)\n//       .then((data) => {\n//         localStorage.setItem(\"jwt\", data.token);\n//         setEmail(email);\n//         setLoggedIn(true);\n//         history.push(\"/\");\n//       })\n//       .catch((e) => {\n//         console.error(e);\n//         setIsInfoTooltipOpen(true);\n//       });\n//   }\n\n//   function handleLogout() {\n//     localStorage.removeItem(\"jwt\");\n//     setEmail(\"\");\n//     setLoggedIn(false);\n//     history.push(\"/sign-in\");\n//   }\n\n//   return (\n//     <div className=\"root\">\n//       <CurrentUserContext.Provider value={currentUser}>\n//         <Header email={email} loggedIn={loggedIn} onSignOut={handleLogout} />\n//         <Switch>\n//           <ProtectedRoute\n//             exact\n//             path=\"/\"\n//             component={Main}\n//             onCardDelete={handleCardRemove}\n//             onCardLike={handleCardLike}\n//             onCardClick={handleCardClick}\n//             onEditAvatar={handleEditAvatarClick}\n//             onEditProfile={handleEditProfileClick}\n//             onAddPlace={handleAddPlaceClick}\n//             cards={cards}\n//             loggedIn={loggedIn}\n//           />\n//           <Route path=\"/sign-up\">\n//             <Register handleRegister={handleRegisterSubmit} />\n//           </Route>\n//           <Route path=\"/sign-in\">\n//             <Login handleLogin={handleLoginSubmit} />\n//           </Route>\n//           <Route>\n//             {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n//           </Route>\n//         </Switch>\n//         <EditProfilePopup\n//           onUpdateUser={handleUpdateUser}\n//           isOpen={isEditProfilePopupOpen}\n//           onClose={closeAllPopups}\n//         />\n//         <AddPlacePopup\n//           onAddPlace={handleAddPlaceSubmit}\n//           isOpen={isAddPlacePopupOpen}\n//           onClose={closeAllPopups}\n//         />\n//         <EditAvatarPopup\n//           isOpen={isEditAvatarPopupOpen}\n//           onClose={closeAllPopups}\n//           onUpdateAvatar={handleUpdateAvatar}\n//         />\n//         <ConfirmPopup />\n//         <ImagePopup\n//           card={selectedCard !== null && selectedCard}\n//           onClose={closeAllPopups}\n//         />\n//         <InfoTooltip\n//           isOpen={isInfoTooltipOpen}\n//           onClose={closeAllPopups}\n//           success={isSuccess}\n//         />\n\n//         <Footer />\n//       </CurrentUserContext.Provider>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signin\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Login","Route","Routes","Register","Footer","Main","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/components/App.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import Header from \"./Header\";\r\n// import Main from \"./Main\";\r\n// import Footer from \"./Footer\";\r\n// import EditProfilePopup from \"./EditProfilePopup\";\r\n// import AddPlacePopup from \"./AddPlacePopup\";\r\n// import EditAvatarPopup from \"./EditAvatarPopup\";\r\n// import ConfirmPopup from \"./ConfirmPopup\";\r\n// import ImagePopup from \"./ImagePopup\";\r\n// import { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n// import api from \"../utils/api\";\r\n// import { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\r\n// import ProtectedRoute from \"./ProtectedRoute\";\r\n// import Login from \"./Login\";\r\n// import Register from \"./Register\";\r\n// import InfoTooltip from \"./InfoTooltip\";\r\n// import * as auth from \"../utils/auth\";\r\n\r\n// function App() {\r\n//   const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\r\n//     React.useState(false);\r\n//   const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n//   const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\r\n//     React.useState(false);\r\n//   const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\r\n//   const [selectedCard, setSelectedCard] = React.useState(null);\r\n//   const [currentUser, setCurrentUser] = React.useState({});\r\n//   const [cards, setCards] = React.useState([]);\r\n//   const [isSuccess, setIsSuccess] = React.useState(false);\r\n//   const [loggedIn, setLoggedIn] = React.useState(false);\r\n//   const [email, setEmail] = React.useState(\"\");\r\n//   const history = useHistory();\r\n\r\n//   React.useEffect(() => {\r\n//     Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n//       .then(([userData, cards]) => {\r\n//         setCurrentUser(userData.data);\r\n//         setCards(cards.data);\r\n//       })\r\n//       .catch((e) => console.log(e));\r\n//   }, []);\r\n\r\n//   React.useEffect(() => {\r\n//     if (localStorage.getItem(\"jwt\")) {\r\n//       const jwt = localStorage.getItem(\"jwt\");\r\n//       auth\r\n//         .checkToken(jwt)\r\n//         .then((res) => {\r\n//           if (res) {\r\n//             setEmail(res.data.email);\r\n//           }\r\n//           setLoggedIn(true);\r\n//           history.push(\"/\");\r\n//         })\r\n//         .catch((e) => {\r\n//           console.error(e);\r\n//           setIsInfoTooltipOpen(true);\r\n//         });\r\n//     }\r\n//   });\r\n\r\n//   function handleCardLike(card) {\r\n//     const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n//     api\r\n//       .changeLikeCardStatus(card._id, !isLiked)\r\n//       .then((newCard) => {\r\n//         setCards((state) =>\r\n//           state.map((c) => (c._id === card._id ? newCard.data : c))\r\n//         );\r\n//       })\r\n//       .catch((e) => console.log(e));\r\n//   }\r\n\r\n//   function handleCardRemove(card) {\r\n//     api\r\n//       .removeCard(card._id)\r\n//       .then(() => {\r\n//         setCards((state) => state.filter((c) => c._id !== card._id));\r\n//       })\r\n//       .catch((e) => console.log(e));\r\n//   }\r\n\r\n//   function handleUpdateUser({ name, about }) {\r\n//     api\r\n//       .setUserInfo(name, about)\r\n//       .then((res) => {\r\n//         setCurrentUser({\r\n//           ...currentUser,\r\n//           name: res.data.name,\r\n//           about: res.data.about,\r\n//         });\r\n//         closeAllPopups();\r\n//       })\r\n//       .catch((e) => console.log(e));\r\n//   }\r\n\r\n//   function handleUpdateAvatar(avatarData) {\r\n//     api\r\n//       .setUserAvatar(avatarData)\r\n//       .then((res) => {\r\n//         setCurrentUser({ ...currentUser, avatar: res.data.avatar });\r\n//         closeAllPopups();\r\n//       })\r\n//       .catch((e) => console.log(e));\r\n//   }\r\n\r\n//   function handleAddPlaceSubmit(name, link) {\r\n//     api\r\n//       .createCard(name, link)\r\n//       .then((res) => {\r\n//         setCards([res.data, ...cards]);\r\n//         closeAllPopups();\r\n//       })\r\n//       .catch((e) => console.log(e));\r\n//   }\r\n\r\n//   function handleEditAvatarClick() {\r\n//     setIsEditAvatarPopupOpen(true);\r\n//   }\r\n\r\n//   function handleEditProfileClick() {\r\n//     setIsEditProfilePopupOpen(true);\r\n//   }\r\n\r\n//   function handleAddPlaceClick() {\r\n//     setIsAddPlacePopupOpen(true);\r\n//   }\r\n\r\n//   function handleCardClick(card) {\r\n//     setSelectedCard(card);\r\n//   }\r\n\r\n//   function closeAllPopups() {\r\n//     setIsEditAvatarPopupOpen(false);\r\n//     setIsEditProfilePopupOpen(false);\r\n//     setIsInfoTooltipOpen(false);\r\n//     setIsAddPlacePopupOpen(false);\r\n//     setSelectedCard(null);\r\n//   }\r\n\r\n//   function handleRegisterSubmit(email, password) {\r\n//     auth\r\n//       .register(email, password)\r\n//       .then((data) => {\r\n//         if (data) {\r\n//           localStorage.setItem(\"jwt\", data.jwt);\r\n//           setEmail(data.data.email);\r\n//         }\r\n//         history.push(\"/sign-in\");\r\n//         setIsSuccess(true);\r\n//         setIsInfoTooltipOpen(true);\r\n//       })\r\n//       .catch((e) => {\r\n//         console.error(e);\r\n//         setIsSuccess(false);\r\n//         setIsInfoTooltipOpen(true);\r\n//       });\r\n//   }\r\n\r\n//   function handleLoginSubmit(email, password) {\r\n//     return auth\r\n//       .authorization(email, password)\r\n//       .then((data) => {\r\n//         localStorage.setItem(\"jwt\", data.token);\r\n//         setEmail(email);\r\n//         setLoggedIn(true);\r\n//         history.push(\"/\");\r\n//       })\r\n//       .catch((e) => {\r\n//         console.error(e);\r\n//         setIsInfoTooltipOpen(true);\r\n//       });\r\n//   }\r\n\r\n//   function handleLogout() {\r\n//     localStorage.removeItem(\"jwt\");\r\n//     setEmail(\"\");\r\n//     setLoggedIn(false);\r\n//     history.push(\"/sign-in\");\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"root\">\r\n//       <CurrentUserContext.Provider value={currentUser}>\r\n//         <Header email={email} loggedIn={loggedIn} onSignOut={handleLogout} />\r\n//         <Switch>\r\n//           <ProtectedRoute\r\n//             exact\r\n//             path=\"/\"\r\n//             component={Main}\r\n//             onCardDelete={handleCardRemove}\r\n//             onCardLike={handleCardLike}\r\n//             onCardClick={handleCardClick}\r\n//             onEditAvatar={handleEditAvatarClick}\r\n//             onEditProfile={handleEditProfileClick}\r\n//             onAddPlace={handleAddPlaceClick}\r\n//             cards={cards}\r\n//             loggedIn={loggedIn}\r\n//           />\r\n//           <Route path=\"/sign-up\">\r\n//             <Register handleRegister={handleRegisterSubmit} />\r\n//           </Route>\r\n//           <Route path=\"/sign-in\">\r\n//             <Login handleLogin={handleLoginSubmit} />\r\n//           </Route>\r\n//           <Route>\r\n//             {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\r\n//           </Route>\r\n//         </Switch>\r\n//         <EditProfilePopup\r\n//           onUpdateUser={handleUpdateUser}\r\n//           isOpen={isEditProfilePopupOpen}\r\n//           onClose={closeAllPopups}\r\n//         />\r\n//         <AddPlacePopup\r\n//           onAddPlace={handleAddPlaceSubmit}\r\n//           isOpen={isAddPlacePopupOpen}\r\n//           onClose={closeAllPopups}\r\n//         />\r\n//         <EditAvatarPopup\r\n//           isOpen={isEditAvatarPopupOpen}\r\n//           onClose={closeAllPopups}\r\n//           onUpdateAvatar={handleUpdateAvatar}\r\n//         />\r\n//         <ConfirmPopup />\r\n//         <ImagePopup\r\n//           card={selectedCard !== null && selectedCard}\r\n//           onClose={closeAllPopups}\r\n//         />\r\n//         <InfoTooltip\r\n//           isOpen={isInfoTooltipOpen}\r\n//           onClose={closeAllPopups}\r\n//           success={isSuccess}\r\n//         />\r\n\r\n//         <Footer />\r\n//       </CurrentUserContext.Provider>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Login from \"./Login\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\nimport Footer from \"./Footer\";\r\nimport Main from \"./Main\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"root\">\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/signin\" element={<Login />} />\r\n        <Route path=\"/signup\" element={<Register />} />\r\n\r\n        <Route path=\"/\" element={<Main />} />\r\n        <Footer />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappingszB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA;IAAKE,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBH,OAAA,CAACR,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACVP,OAAA,CAACL,MAAM;MAAAQ,QAAA,gBACLH,OAAA,CAACN,KAAK;QAACc,IAAI,EAAC,SAAS;QAACC,OAAO,eAAET,OAAA,CAACP,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC5CP,OAAA,CAACN,KAAK;QAACc,IAAI,EAAC,SAAS;QAACC,OAAO,eAAET,OAAA,CAACJ,QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAE/CP,OAAA,CAACN,KAAK;QAACc,IAAI,EAAC,GAAG;QAACC,OAAO,eAAET,OAAA,CAACF,IAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrCP,OAAA,CAACH,MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAACG,EAAA,GAbIT,GAAG;AAeT,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}