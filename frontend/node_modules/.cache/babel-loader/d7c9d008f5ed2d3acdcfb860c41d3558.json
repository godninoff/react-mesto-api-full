{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';function getResponseData(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(getResponseData);};export var authorization=function authorization(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(getResponseData);};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(getResponseData);};","map":{"version":3,"sources":["C:/Users/godni/dev/mesto-react/src/utils/auth.js"],"names":["BASE_URL","getResponseData","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorization","checkToken","token"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,QAASC,CAAAA,eAAT,CAAyBC,GAAzB,CAA8B,CAC1B,GAAGA,GAAG,CAACC,EAAP,CAAW,CACP,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,MAA9B,EAAP,CACH,CAED,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFsB,CAM/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CANyB,CAAvB,CAAL,CAQNO,IARM,CAQDhB,eARC,CAAP,CASH,CAVM,CAYP,MAAO,IAAMiB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACT,KAAD,CAAQC,QAAR,CAAqB,CAC9C,MAAOC,CAAAA,KAAK,WAAIX,QAAJ,YAAuB,CAC/BY,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFsB,CAM/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CANyB,CAAvB,CAAL,CAQNO,IARM,CAQDhB,eARC,CAAP,CASH,CAVM,CAYP,MAAO,IAAMkB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACjC,MAAOT,CAAAA,KAAK,WAAIX,QAAJ,cAAyB,CACnCY,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,SAAU,kBADH,CAEP,eAAgB,kBAFT,CAGP,iCAA2BO,KAA3B,CAHO,CAF0B,CAAzB,CAAL,CAQNH,IARM,CAQDhB,eARC,CAAP,CASD,CAVI","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nfunction getResponseData(res) {\r\n    if(res.ok) {\r\n        return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`); \r\n}\r\n\r\nexport const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n    .then(getResponseData)\r\n};\r\n\r\nexport const authorization = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n    .then(getResponseData)\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n      }\r\n    })\r\n    .then(getResponseData)\r\n  }\r\n\r\n"]},"metadata":{},"sourceType":"module"}