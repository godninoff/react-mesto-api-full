{"ast":null,"code":"export const BASE_URL = \"http://localhost:3000\";\nfunction getResponseData(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(getResponseData);\n};\nexport const authorization = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\",\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(getResponseData);\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"include\"\n  }).then(getResponseData);\n};","map":{"version":3,"names":["BASE_URL","getResponseData","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","credentials","body","JSON","stringify","then","authorization","checkToken","token"],"sources":["C:/dev/projects/react-mesto-api-full/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"http://localhost:3000\";\r\n\r\nfunction getResponseData(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"include\",\r\n    body: JSON.stringify({ email, password }),\r\n  }).then(getResponseData);\r\n};\r\n\r\nexport const authorization = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"include\",\r\n    body: JSON.stringify({ email, password }),\r\n  }).then(getResponseData);\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"include\",\r\n  }).then(getResponseData);\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAuB;AAE/C,SAASC,eAAeA,CAACC,GAAG,EAAE;EAC5B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACQ,IAAI,CAACjB,eAAe,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMkB,aAAa,GAAGA,CAACV,KAAK,EAAEC,QAAQ,KAAK;EAChD,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACQ,IAAI,CAACjB,eAAe,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMmB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOV,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,WAAW,EAAE;EACf,CAAC,CAAC,CAACI,IAAI,CAACjB,eAAe,CAAC;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}